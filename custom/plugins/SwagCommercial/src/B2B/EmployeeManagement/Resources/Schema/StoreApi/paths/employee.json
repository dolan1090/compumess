{
  "openapi": "3.0.0",
  "info": {
    "title": "SwagCommercial employee schemas",
    "version": "1.0.0"
  },
  "paths": {
    "/store-api/employee/create": {
      "post": {
        "tags": [
          "B2B"
        ],
        "summary": "Create a single employee and returns the employee",
        "description": "This route is used to create and return an employee",
        "operationId": "createEmployee",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "firstName": {
                    "description": "First name of the new employee",
                    "type": "string"
                  },
                  "lastName": {
                    "description": "Last name of the new employee",
                    "type": "string"
                  },
                  "email": {
                    "description": "Email of the new employee",
                    "type": "string"
                  },
                  "roleId": {
                    "description": "Id of the role of the new employee",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Employee entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/B2bEmployee"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKey": []
          }
        ]
      }
    },
    "/store-api/employee": {
      "post": {
        "tags": [
          "B2B"
        ],
        "summary": "Fetch a list of employees",
        "description": "This route is used to load employees",
        "operationId": "readEmployees",
        "parameters": [],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Criteria"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Entity search result containing employees",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "properties": {
                        "elements": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/B2bEmployee"
                          }
                        }
                      },
                      "type": "object"
                    },
                    {
                      "$ref": "#/components/schemas/EntitySearchResult"
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKey": []
          }
        ]
      }
    },
    "/store-api/employee/{id}": {
      "post": {
        "tags": [
          "B2B"
        ],
        "summary": "Fetch a one employee by id",
        "description": "This route is used to fetch one employee by id",
        "operationId": "readEmployee",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier of the employee to be fetched",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Employee entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/B2bEmployee"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKey": []
          }
        ]
      },
      "patch": {
        "tags": [
          "B2B"
        ],
        "summary": "Update a one employee by id",
        "description": "This route is used to update one employee by id",
        "operationId": "updateEmployee",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier of the employee to be updated",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "firstName": {
                    "description": "New first name of the employee",
                    "type": "string"
                  },
                  "lastName": {
                    "description": "New last name of the employee",
                    "type": "string"
                  },
                  "email": {
                    "description": "New email of the employee",
                    "type": "string"
                  },
                  "roleId": {
                    "description": "New id of the role of the employee",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Employee entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/B2bEmployee"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKey": []
          }
        ]
      },
      "delete": {
        "tags": [
          "B2B"
        ],
        "summary": "Delete an employee by id",
        "description": "This route is used to delete one employee by id",
        "operationId": "deleteEmployee",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier of the employee to be deleted",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No content response"
          }
        },
        "security": [
          {
            "ApiKey": []
          }
        ]
      }
    },
    "/store-api/employee/reinvite/{id}": {
      "post": {
        "tags": [
          "B2B"
        ],
        "summary": "Reinvite employee by id",
        "description": "This route is used to reinvite an employee via email by id",
        "operationId": "reinviteEmployee",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier of the employee to be reinvited",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{32}$"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "storefrontUrl": {
                    "description": "URL of the storefront domain",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Employee entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/B2bEmployee"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKey": []
          }
        ]
      }
    }
  }
}
