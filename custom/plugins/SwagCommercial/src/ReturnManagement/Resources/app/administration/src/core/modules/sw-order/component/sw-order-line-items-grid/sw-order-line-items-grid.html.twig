{% block sw_order_line_items_grid %}
<sw-container
    type="row"
    class="sw-order-line-items-grid"
>
    {% parent %}

    <swag-return-management-create-return-modal
        v-if="showReturnModal"
        :line-items="returnItems"
        :order="order"
        @return-create="onReturnCreate"
        @return-added-items="onAddedItemsToReturn"
        @modal-close="onCloseReturnModal"
    />

    <swag-return-management-set-item-status-modal
        v-if="showItemStatusModal"
        :line-items="selectedChangeStatusItems"
        entity-name="orderLineItem"
        @set-status-success="onSetStatusSuccess"
        @modal-close="onCloseItemStatusModal"
    />

    <swag-return-management-delete-line-item-modal
        v-if="showDeleteLineItemModal"
        :return-id="returnId"
        :line-items="deleteLineItems"
        :context="context"
        @item-delete="onDeleteItemHasReturn"
        @modal-close="onCloseDeleteLineItemModal"
    />
</sw-container>
{% endblock %}

{% block sw_order_line_items_grid_bulk_actions_extension %}
    <!-- eslint-disable-next-line vuejs-accessibility/click-events-have-key-events -->
    <a
        v-if="hasToggleKey"
        v-tooltip="{
            message: $tc('sw-privileges.tooltip.warning'),
            disabled: acl.can('order_return.editor'),
            showOnDisabledElements: true
        }"
        class="link link-primary sw-order-line-items-grid__return-items"
        :class="returnItemButtonClass"
        @click="onReturnSelectedItems(null)"
    >
        {{ $tc('swag-return-management.detail.buttonReturnItems') }}
        <sw-help-text
            v-if="acl.can('order_return.editor')"
            :text="$tc('swag-return-management.detail.messageErrorCreateReturnModal')"
        />
    </a>

    <!-- eslint-disable-next-line vuejs-accessibility/click-events-have-key-events -->
    <a
        v-if="hasToggleKey"
        class="link link-primary sw-order-line-items-grid__set-status"
        @click="onSetItemStatus(null)"
    >
        {{ $tc('swag-return-management.detail.buttonSetStatus') }}
    </a>
{% endblock %}

{% block sw_order_line_items_grid_grid_actions_extension %}
    <sw-context-menu-item
        v-if="showStatusItemAction(item) && hasToggleKey"
        v-tooltip.left="{
            message: $tc('sw-privileges.tooltip.warning'),
            disabled: acl.can('order.editor'),
            showOnDisabledElements: true
        }"
        :disabled="!acl.can('order.editor')"
        @click="onSetItemStatus(item)"
    >
        {{ $tc('swag-return-management.detail.contextMenuSetStatus') }}
    </sw-context-menu-item>

    <sw-context-menu-item
        v-if="showStatusItemAction(item) && hasToggleKey"
        v-tooltip.left="tooltipReturnContextMenu(item)"
        :disabled="!isReturnableItem(item)"
        @click="onReturnSelectedItems(item)"
    >
        {{ $tc('swag-return-management.returnItemGrid.contextMenuReturn') }}
    </sw-context-menu-item>
{% endblock %}

{% block sw_order_line_items_grid_grid_columns %}
    {% parent %}

    <template #column-extensions.state.name="{ item }">
        {{ getItemStatus(item) }}

        <sw-icon
            v-if="showSetStatusManuallyWarning(item)"
            v-tooltip="{ message: $tc('swag-return-management.detail.tooltipChangeItemStatusManually') }"
            class="sw-order-line-items-grid__status-warning"
            name="solid-exclamation-circle"
            size="12px"
        />
    </template>
{% endblock %}
